import type { NextApiRequest, NextApiResponse } from 'next';
import axios from 'axios';

const botId = process.env.NEXT_PUBLIC_TELEGRAM_BOT_TOKEN;
const chatIDLera = process.env.NEXT_PUBLIC_TELEGRAM_LERA_ID;
const chatIDGavr = process.env.NEXT_PUBLIC_TELEGRAM_GAVR_ID;

const handler = async (req: NextApiRequest, res: NextApiResponse<any>) => {
    const { name, tel, email, id, beaverCoins, event, age, date } = req.body;

    // Telegram Form Submit
    const messageFormCompleted = `
    –õ–µ—Ä–∞, –ø—Ä–∏–≤–µ—Ç üëã%0A
–ù–æ–≤—ã–π —á–µ–ª–æ–≤–µ–∫ –∑–∞–ø–æ–ª–Ω–∏–ª —Ñ–æ—Ä–º—É üòØ%0A
–ò–º—è: ${name}%0A
–ù–æ–º–µ—Ä –¢–µ–ª–µ—Ñ–æ–Ω–∞: 8${tel}%0A
–°–≤—è–∂–µ–º—Å—è —Å –Ω–∏–º–∏? üòå
    `;

    //  TELEGRAM FUTURE EVENT
    const messageForFutureEvent = `
    –õ–µ—Ä–∞, –ø—Ä–∏–≤–µ—Ç ü§ç%0A
${name} —Ö–æ—á–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ —Ä–µ–±–µ–Ω–∫–∞ –Ω–∞ ${event} üéâ%0A
–ö–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Ö–æ–¥–∏—Ç: ${date}%0A
–¢–∞–º –≥–¥–µ –≤–æ–∑—Ä–∞—Å—Ç –¥–µ—Ç–æ–∫: ${age}%0A
–¢–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏ —Å –Ω–∏–º–∏: 8${tel}%0A
–ù–∞–ø–∏—à–∏ –∏–º üòâ
`;

    const url = `https://api.telegram.org/bot${botId}/sendMessage?chat_id=${chatIDLera}&text=${event ? messageForFutureEvent : messageFormCompleted}`;
    const url2 = `https://api.telegram.org/bot${botId}/sendMessage?chat_id=${chatIDGavr}&text=${event ? messageForFutureEvent : messageFormCompleted}`;

    // Notion Add User to DB
    const notionOptions = {
        method: 'POST',
        url: `https://api.notion.com/v1/pages`,
        headers: {
            accept: 'application/json',
            'Notion-Version': '2022-06-28',
            'content-type': 'application/json',
            Authorization: `${process.env.NEXT_PUBLIC_NOTION_KEY}`,
        },
        data: {
            parent: {
                database_id: process.env.NEXT_PUBLIC_NOTION_USERS_DB,
            },
            properties: {
                key: {
                    title: [
                        {
                            text: {
                                content: id,
                            },
                        },
                    ],
                },
                name: {
                    rich_text: [
                        {
                            type: 'text',
                            text: {
                                content: name,
                            },
                        },
                    ],
                },
                email: {
                    email: email,
                },
                phone: {
                    phone_number: tel,
                },
                beaver_coins: {
                    number: beaverCoins,
                },
            },
        },
    };

    if (event) {
        try {
            const telegramAlertSubmit = await axios.get(url);
            const status = telegramAlertSubmit.status;
            res.status(200).send({ status });
        } catch {
            res.status(500).send({ status: 500 });
        }
    } else {
        try {
            const telegramAlertSubmit = await axios.get(url);
            const telegramAlertSubmitGavr = axios.get(url2);
            const status = telegramAlertSubmit.status;
            const notionUserSubmit = await axios(notionOptions);
            const status2 = notionUserSubmit.status;
            res.status(200).send({ status, status2 });
        } catch {
            res.status(500).send({ status: 500 });
        }
    }
};
export default handler;
